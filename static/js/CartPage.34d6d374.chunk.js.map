{"version":3,"file":"static/js/CartPage.34d6d374.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/folderButton/Button.module.css?7fe9","components/folderButton/Button.tsx","webpack://my-app/./src/components/folderInsteadProduct/insteadProduct.module.css?e21b","components/folderInsteadProduct/InsteadProduct.tsx","webpack://my-app/./src/components/folderMainTitle/MainTitle.module.css?a4b5","components/folderMainTitle/MainTitle.tsx","webpack://my-app/./src/components/folderCartCard/CartCard.module.css?5ae1","components/folderCartCard/CartCard.tsx","webpack://my-app/./src/components/folderOrderResult/OrderResult.module.css?8e4a","components/folderOrderResult/OrderResult.tsx","webpack://my-app/./src/components/folderButtonGroup/ButtonGroup.module.css?7cd3","components/folderButtonGroup/ButtonGroup.tsx","components/pages/CartPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__y6a1P\",\"button-icon\":\"Button_button-icon__7PVBf\",\"button-name\":\"Button_button-name__40GMZ\",\"button_v1\":\"Button_button_v1__MsmIF\",\"button_v2\":\"Button_button_v2__finm5\",\"button-icon_v2\":\"Button_button-icon_v2__hrqAz\",\"button-name_v2\":\"Button_button-name_v2__Z8QtT\",\"button-icon_v3\":\"Button_button-icon_v3__t6ipV\",\"button-icon_v4\":\"Button_button-icon_v4__VTM2T\",\"button_v5\":\"Button_button_v5__2O1ZJ\",\"button-icon_v5\":\"Button_button-icon_v5__SJ4-a\"};","import React from 'react';\r\nimport style from './Button.module.css';\r\nimport { ButtonPropsType } from '../../@types/customType';\r\n\r\nconst Button: React.FC<ButtonPropsType> = ({ nameBtn, nameStyle, handleClick }) => {\r\n  return (\r\n    <button\r\n      className={`${style['button']} ${style[`${nameStyle[0]}`]}`}\r\n      onClick={handleClick}\r\n    >\r\n      <svg\r\n        className={`${style['button-icon']} ${style[`${nameStyle[1]}`]}`}\r\n        viewBox='0 0 10 10'\r\n        fill='none'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <path d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z' />\r\n        <path d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z' />\r\n      </svg>\r\n      <span className={`${style['button-name']} ${style[`${nameStyle[2]}`]}`}>\r\n        {nameBtn}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"insteadProduct_img__l1M0b\",\"img-item\":\"insteadProduct_img-item__N7uNM\"};","import { InsteadProductPropsType } from '../../@types/customType';\r\nimport style from './insteadProduct.module.css';\r\n\r\nconst InsteadProduct: React.FC<InsteadProductPropsType> = ({ img }) => {\r\n  return (\r\n    <div className={style['img']}>\r\n      <img className={style['img-item']} src={img} alt='img' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsteadProduct;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MainTitle_title__9eeEH\",\"title-item\":\"MainTitle_title-item__AFQRf\",\"title-item-error\":\"MainTitle_title-item-error__auLXa\",\"title-item-empty\":\"MainTitle_title-item-empty__RYpr8\"};","import { MainTitlePropsType } from '../../@types/customType';\r\nimport style from './MainTitle.module.css';\r\n\r\nconst MainTitle: React.FC<MainTitlePropsType> = ({ titleName, styleName }) => {\r\n  return (\r\n    <section className={style['title']}>\r\n      <h1\r\n        className={\r\n          styleName === undefined\r\n            ? `${style['title-item']}`\r\n            : `${style['title-item']} ${style[styleName]}`\r\n        }\r\n      >\r\n        {titleName}\r\n      </h1>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainTitle;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CartCard_wrapper__OKG47\",\"product\":\"CartCard_product__qZwOk\",\"images\":\"CartCard_images__Wzogg\",\"images-item\":\"CartCard_images-item__XHIeu\",\"info\":\"CartCard_info__NbxXy\",\"title\":\"CartCard_title__NeMw1\",\"description\":\"CartCard_description__8N8WC\",\"control-buttons\":\"CartCard_control-buttons__NhE7i\",\"inner\":\"CartCard_inner__STSbz\",\"text-price-item\":\"CartCard_text-price-item__1S5Z6\",\"text-count-item\":\"CartCard_text-count-item__9ykfG\",\"text-price\":\"CartCard_text-price__XzbMJ\",\"text-count\":\"CartCard_text-count__6OrKG\"};","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setProductCounter,\r\n  setPriceCounter,\r\n  setCartData,\r\n} from '../../redux/slices/cartOfProductsSlice';\r\nimport { RootState } from '../../redux/store';\r\n\r\nimport style from './CartCard.module.css';\r\nimport { listOfSeasonTitles } from '../../assets/listsWithNames';\r\nimport Button from '../folderButton/Button';\r\n\r\nimport { ProductCartType } from '../../@types/customType';\r\n\r\nconst CartCard: React.FC<ProductCartType> = ({ id, imageUrl, title, type, sizes, price }) => {\r\n  /* используем хук useSelector из библиотеки Redux \r\n     для получения значений (productCounter, priceCounter, cartData) из состояния,\r\n     с помощью селектора cartOfProductsSlice */\r\n  const { productCounter, priceCounter, cartData } = useSelector(\r\n    (state: RootState) => state.cartOfProductsSlice\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // функция, удалить товар из корзины\r\n  const removeItemFromCart = () => {\r\n    const confirmation = window.confirm(\r\n      'Вы действительно хотите удалить товар из корзины?'.toUpperCase()\r\n    );\r\n    if (confirmation) {\r\n      // копируем данные товара с помощью оператора spread\r\n      const copyCartData = [...cartData];\r\n      // удаляем выбранные данные из корзины\r\n      const newCartData = copyCartData.filter((item) => item.id !== id);\r\n      // обновляем данные в корзине\r\n      dispatch(setCartData(newCartData));\r\n\r\n      // записываем новые значения счетчиков в константы\r\n      const updatedProductCounter = productCounter - 1;\r\n      const updatePriceCounter = priceCounter - price;\r\n      // обновляем значения счетчиков товаров и цен\r\n      dispatch(setProductCounter(updatedProductCounter));\r\n      dispatch(setPriceCounter(updatePriceCounter));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style['wrapper']}>\r\n      <div className={style['product']}>\r\n        <div className={style['images']}>\r\n          <img className={style['images-item']} src={imageUrl} alt='Product' />\r\n        </div>\r\n        <div className={style['info']}>\r\n          <h3 className={style['title']}>{title}</h3>\r\n          <p className={style['description']}>\r\n            {listOfSeasonTitles[type]}, {sizes}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className={style['control-buttons']}>\r\n        <div className={style['text-price']}>\r\n          <span className={style['text-price-item']}>\r\n            {price.toLocaleString()} ₽\r\n          </span>\r\n        </div>\r\n        <div className={style['inner']}>\r\n          <Button\r\n            handleClick={removeItemFromCart}\r\n            nameStyle={['button_v2', 'button-icon_v3', 'button-name_v2']}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OrderResult_wrapper__pmug+\",\"in-total\":\"OrderResult_in-total__wJhp2\",\"amount\":\"OrderResult_amount__d7ZlD\",\"number\":\"OrderResult_number__LoiET\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport style from './OrderResult.module.css';\r\n\r\nconst OrderResult: React.FC = () => {\r\n  /* используем хук useSelector из библиотеки Redux \r\n     для получения значений (productCounter, priceCounter, cartData) из состояния,\r\n     с помощью селектора cartOfProductsSlice */\r\n  const { productCounter, priceCounter } = useSelector(\r\n    (state: RootState) => state.cartOfProductsSlice\r\n  );\r\n\r\n  return (\r\n    <div className={style['wrapper']}>\r\n      <p className={style['in-total']}>\r\n        Всего:{' '}\r\n        <b className={style['number']}>{productCounter.toLocaleString()} шт.</b>\r\n      </p>\r\n      <p className={style['amount']}>\r\n        Сумма:{' '}\r\n        <b className={style['number']}>{priceCounter.toLocaleString()} ₽</b>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderResult;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonGroup_wrapper__ncku-\",\"link\":\"ButtonGroup_link__HwI6-\",\"hide-element\":\"ButtonGroup_hide-element__jBJyy\"};","import { Link } from 'react-router-dom';\r\n\r\nimport style from './ButtonGroup.module.css';\r\nimport Button from '../folderButton/Button';\r\nimport { ButtonGroupPropsType } from '../../@types/customType';\r\n\r\nconst ButtonGroup: React.FC<ButtonGroupPropsType> = ({ styleName }) => {\r\n  if (styleName === undefined) {\r\n    styleName = '';\r\n  }\r\n\r\n  return (\r\n    <div className={`${style['wrapper']} ${style[styleName]}`}>\r\n      <Link to='/6_MomMeganTS' className={style['link']}>\r\n        <Button\r\n          nameBtn={'Вернуться назад'}\r\n          nameStyle={['button_v5', 'button-icon_v4', 'button-name_v1']}\r\n        />\r\n      </Link>\r\n      <Button\r\n        nameBtn={'Оплатить сейчас'}\r\n        nameStyle={['button_v5', 'button-icon_v5', 'button-name_v1']}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport emptyCartImg from '../../assets/img/emptyCart.png';\r\nimport MainTitle from '../folderMainTitle/MainTitle';\r\nimport CartCard from '../folderCartCard/CartCard';\r\nimport OrderResult from '../folderOrderResult/OrderResult';\r\nimport ButtonGroup from '../folderButtonGroup/ButtonGroup';\r\nimport InsteadProduct from '../folderInsteadProduct/InsteadProduct';\r\nimport { ProductCartType } from '../../@types/customType';\r\n\r\nconst CartPage: React.FC = () => {\r\n  /* используем хук useSelector из библиотеки Redux \r\n     для получения значений (productCounter, priceCounter, cartData) из состояния,\r\n     с помощью селектора cartOfProductsSlice */\r\n  const { productCounter, cartData } = useSelector(\r\n    (state: RootState) => state.cartOfProductsSlice\r\n  );\r\n\r\n  return productCounter > 0 ? (\r\n    <>\r\n      <MainTitle titleName='Корзина' />\r\n      {cartData.map((obj: ProductCartType) => {\r\n        return <CartCard key={obj.id} {...obj} />;\r\n      })}\r\n      <OrderResult />\r\n      <ButtonGroup styleName={''} />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <MainTitle\r\n        titleName='Ваша корзина пуста...'\r\n        styleName={'title-item-empty'}\r\n      />\r\n      <InsteadProduct img={emptyCartImg} />\r\n      <ButtonGroup styleName={'hide-element'} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":["_ref","nameBtn","nameStyle","handleClick","_jsxs","className","concat","style","onClick","children","viewBox","fill","xmlns","_jsx","d","img","src","alt","titleName","styleName","undefined","id","imageUrl","title","type","sizes","price","_useSelector","useSelector","state","cartOfProductsSlice","productCounter","priceCounter","cartData","dispatch","useDispatch","listOfSeasonTitles","toLocaleString","Button","window","confirm","toUpperCase","newCartData","_toConsumableArray","filter","item","setCartData","updatedProductCounter","updatePriceCounter","setProductCounter","setPriceCounter","Link","to","_Fragment","MainTitle","map","obj","CartCard","_objectSpread","OrderResult","ButtonGroup","InsteadProduct","emptyCartImg"],"sourceRoot":""}